{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\task-tracker\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchTasks = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/api/tasks', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setTasks(data);\n      } else {\n        console.error(data.message);\n      }\n    } catch (err) {\n      console.error('Failed to load tasks');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/task/${task._id}`,\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), \" - \", task.completed ? '✅' : '❌']\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","loading","setLoading","fetchTasks","res","fetch","headers","Authorization","localStorage","getItem","data","json","ok","console","error","message","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","href","_id","title","completed","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/task-tracker/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/tasks', {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setTasks(data);\r\n      } else {\r\n        console.error(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to load tasks');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : tasks.length === 0 ? (\r\n        <p>No tasks found</p>\r\n      ) : (\r\n        <ul>\r\n          {tasks.map((task) => (\r\n            <li key={task._id}>\r\n              <a href={`/task/${task._id}`}>{task.title}</a> - {task.completed ? '✅' : '❌'}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QACzDC,OAAO,EAAE;UACPC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;QACzD;MACF,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MAC7B,IAAIP,GAAG,CAACQ,EAAE,EAAE;QACVZ,QAAQ,CAACU,IAAI,CAAC;MAChB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAACJ,IAAI,CAACK,OAAO,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;IACvC,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBpB,OAAO,gBACNL,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACftB,KAAK,CAACuB,MAAM,KAAK,CAAC,gBACpB1B,OAAA;MAAAqB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAErBzB,OAAA;MAAAqB,QAAA,EACGlB,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBACd5B,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAG6B,IAAI,EAAE,SAASD,IAAI,CAACE,GAAG,EAAG;UAAAT,QAAA,EAAEO,IAAI,CAACG;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,OAAG,EAACG,IAAI,CAACI,SAAS,GAAG,GAAG,GAAG,GAAG;MAAA,GADrEJ,IAAI,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA/CID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}